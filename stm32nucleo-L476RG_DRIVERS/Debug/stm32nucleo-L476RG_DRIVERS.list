
stm32nucleo-L476RG_DRIVERS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000830  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009b4  080009bc  000019bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009b4  080009b4  000019bc  2**0
                  CONTENTS
  4 .ARM          00000000  080009b4  080009b4  000019bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009b4  080009bc  000019bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009b4  080009b4  000019b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080009b8  080009b8  000019b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000019bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000019bc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000019bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b57  00000000  00000000  000019e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002ce  00000000  00000000  0000253d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00002810  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  000028d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001e94  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000011ed  00000000  00000000  000047f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008b4d  00000000  00000000  000059e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000e532  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000028c  00000000  00000000  0000e578  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000058  00000000  00000000  0000e804  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000
 80001a4:	0800099c 	.word	0x0800099c

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000004 	.word	0x20000004
 80001c0:	0800099c 	.word	0x0800099c

080001c4 <GPIO_PeriClockControl>:
/*
 *
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001c4:	b480      	push	{r7}
 80001c6:	b083      	sub	sp, #12
 80001c8:	af00      	add	r7, sp, #0
 80001ca:	6078      	str	r0, [r7, #4]
 80001cc:	460b      	mov	r3, r1
 80001ce:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001d0:	78fb      	ldrb	r3, [r7, #3]
 80001d2:	2b01      	cmp	r3, #1
 80001d4:	d157      	bne.n	8000286 <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80001dc:	d106      	bne.n	80001ec <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80001de:	4b58      	ldr	r3, [pc, #352]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001e2:	4a57      	ldr	r2, [pc, #348]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001e4:	f043 0301 	orr.w	r3, r3, #1
 80001e8:	64d3      	str	r3, [r2, #76]	@ 0x4c
		{
			GPIOH_PCLK_DI();
		}
	}

}
 80001ea:	e0a3      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOB)
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	4a55      	ldr	r2, [pc, #340]	@ (8000344 <GPIO_PeriClockControl+0x180>)
 80001f0:	4293      	cmp	r3, r2
 80001f2:	d106      	bne.n	8000202 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001f4:	4b52      	ldr	r3, [pc, #328]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001f6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001f8:	4a51      	ldr	r2, [pc, #324]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001fa:	f043 0302 	orr.w	r3, r3, #2
 80001fe:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000200:	e098      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOC)
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	4a50      	ldr	r2, [pc, #320]	@ (8000348 <GPIO_PeriClockControl+0x184>)
 8000206:	4293      	cmp	r3, r2
 8000208:	d106      	bne.n	8000218 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800020a:	4b4d      	ldr	r3, [pc, #308]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800020c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800020e:	4a4c      	ldr	r2, [pc, #304]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000210:	f043 0304 	orr.w	r3, r3, #4
 8000214:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000216:	e08d      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOD)
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4a4c      	ldr	r2, [pc, #304]	@ (800034c <GPIO_PeriClockControl+0x188>)
 800021c:	4293      	cmp	r3, r2
 800021e:	d106      	bne.n	800022e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000220:	4b47      	ldr	r3, [pc, #284]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000222:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000224:	4a46      	ldr	r2, [pc, #280]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000226:	f043 0308 	orr.w	r3, r3, #8
 800022a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800022c:	e082      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOE)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	4a47      	ldr	r2, [pc, #284]	@ (8000350 <GPIO_PeriClockControl+0x18c>)
 8000232:	4293      	cmp	r3, r2
 8000234:	d106      	bne.n	8000244 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000236:	4b42      	ldr	r3, [pc, #264]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000238:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800023a:	4a41      	ldr	r2, [pc, #260]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800023c:	f043 0310 	orr.w	r3, r3, #16
 8000240:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000242:	e077      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOF)
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	4a43      	ldr	r2, [pc, #268]	@ (8000354 <GPIO_PeriClockControl+0x190>)
 8000248:	4293      	cmp	r3, r2
 800024a:	d106      	bne.n	800025a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800024c:	4b3c      	ldr	r3, [pc, #240]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800024e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000250:	4a3b      	ldr	r2, [pc, #236]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000252:	f043 0320 	orr.w	r3, r3, #32
 8000256:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000258:	e06c      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOG)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	4a3e      	ldr	r2, [pc, #248]	@ (8000358 <GPIO_PeriClockControl+0x194>)
 800025e:	4293      	cmp	r3, r2
 8000260:	d106      	bne.n	8000270 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000262:	4b37      	ldr	r3, [pc, #220]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000264:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000266:	4a36      	ldr	r2, [pc, #216]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000268:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800026c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800026e:	e061      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOH)
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	4a3a      	ldr	r2, [pc, #232]	@ (800035c <GPIO_PeriClockControl+0x198>)
 8000274:	4293      	cmp	r3, r2
 8000276:	d15d      	bne.n	8000334 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 8000278:	4b31      	ldr	r3, [pc, #196]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800027a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800027c:	4a30      	ldr	r2, [pc, #192]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800027e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000282:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000284:	e056      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800028c:	d106      	bne.n	800029c <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 800028e:	4b2c      	ldr	r3, [pc, #176]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000290:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000292:	4a2b      	ldr	r2, [pc, #172]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000294:	f023 0301 	bic.w	r3, r3, #1
 8000298:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800029a:	e04b      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOB)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a29      	ldr	r2, [pc, #164]	@ (8000344 <GPIO_PeriClockControl+0x180>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	d106      	bne.n	80002b2 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002a4:	4b26      	ldr	r3, [pc, #152]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002a6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002a8:	4a25      	ldr	r2, [pc, #148]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002aa:	f023 0302 	bic.w	r3, r3, #2
 80002ae:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002b0:	e040      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOC)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a24      	ldr	r2, [pc, #144]	@ (8000348 <GPIO_PeriClockControl+0x184>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d106      	bne.n	80002c8 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002ba:	4b21      	ldr	r3, [pc, #132]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002be:	4a20      	ldr	r2, [pc, #128]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002c0:	f023 0304 	bic.w	r3, r3, #4
 80002c4:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002c6:	e035      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOD)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	4a20      	ldr	r2, [pc, #128]	@ (800034c <GPIO_PeriClockControl+0x188>)
 80002cc:	4293      	cmp	r3, r2
 80002ce:	d106      	bne.n	80002de <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 80002d0:	4b1b      	ldr	r3, [pc, #108]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002d2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002d4:	4a1a      	ldr	r2, [pc, #104]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002d6:	f023 0308 	bic.w	r3, r3, #8
 80002da:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002dc:	e02a      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOE)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a1b      	ldr	r2, [pc, #108]	@ (8000350 <GPIO_PeriClockControl+0x18c>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 80002e6:	4b16      	ldr	r3, [pc, #88]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002ea:	4a15      	ldr	r2, [pc, #84]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002ec:	f023 0310 	bic.w	r3, r3, #16
 80002f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002f2:	e01f      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOF)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a17      	ldr	r2, [pc, #92]	@ (8000354 <GPIO_PeriClockControl+0x190>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 80002fc:	4b10      	ldr	r3, [pc, #64]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002fe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000300:	4a0f      	ldr	r2, [pc, #60]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000302:	f023 0320 	bic.w	r3, r3, #32
 8000306:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000308:	e014      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOG)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a12      	ldr	r2, [pc, #72]	@ (8000358 <GPIO_PeriClockControl+0x194>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000312:	4b0b      	ldr	r3, [pc, #44]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000314:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000316:	4a0a      	ldr	r2, [pc, #40]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000318:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800031c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800031e:	e009      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOH)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a0e      	ldr	r2, [pc, #56]	@ (800035c <GPIO_PeriClockControl+0x198>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d105      	bne.n	8000334 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000328:	4b05      	ldr	r3, [pc, #20]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800032a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800032c:	4a04      	ldr	r2, [pc, #16]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800032e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000332:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000334:	bf00      	nop
 8000336:	370c      	adds	r7, #12
 8000338:	46bd      	mov	sp, r7
 800033a:	bc80      	pop	{r7}
 800033c:	4770      	bx	lr
 800033e:	bf00      	nop
 8000340:	40021000 	.word	0x40021000
 8000344:	48000400 	.word	0x48000400
 8000348:	48000800 	.word	0x48000800
 800034c:	48000c00 	.word	0x48000c00
 8000350:	48001000 	.word	0x48001000
 8000354:	48001400 	.word	0x48001400
 8000358:	48001800 	.word	0x48001800
 800035c:	48001c00 	.word	0x48001c00

08000360 <GPIO_Init>:




void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000360:	b480      	push	{r7}
 8000362:	b087      	sub	sp, #28
 8000364:	af00      	add	r7, sp, #0
 8000366:	6078      	str	r0, [r7, #4]
	//1. Configure the mode of the GPIO pin
	uint32_t temp=0;
 8000368:	2300      	movs	r3, #0
 800036a:	617b      	str	r3, [r7, #20]
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<= GPIO_MODE_ANALOG)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	795b      	ldrb	r3, [r3, #5]
 8000370:	2b03      	cmp	r3, #3
 8000372:	d822      	bhi.n	80003ba <GPIO_Init+0x5a>
	{
		//the non interrupt mode of GPIO pGPIOx->MODER &= ~(0x3 << (2 * PinNumber));

		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	795b      	ldrb	r3, [r3, #5]
 8000378:	461a      	mov	r2, r3
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	791b      	ldrb	r3, [r3, #4]
 800037e:	005b      	lsls	r3, r3, #1
 8000380:	fa02 f303 	lsl.w	r3, r2, r3
 8000384:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &=~(0x3 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	681a      	ldr	r2, [r3, #0]
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	791b      	ldrb	r3, [r3, #4]
 8000390:	005b      	lsls	r3, r3, #1
 8000392:	2103      	movs	r1, #3
 8000394:	fa01 f303 	lsl.w	r3, r1, r3
 8000398:	43db      	mvns	r3, r3
 800039a:	4619      	mov	r1, r3
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	400a      	ands	r2, r1
 80003a2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;														//setting
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	6819      	ldr	r1, [r3, #0]
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	697a      	ldr	r2, [r7, #20]
 80003b0:	430a      	orrs	r2, r1
 80003b2:	601a      	str	r2, [r3, #0]
		temp=0;
 80003b4:	2300      	movs	r3, #0
 80003b6:	617b      	str	r3, [r7, #20]
 80003b8:	e0bf      	b.n	800053a <GPIO_Init+0x1da>
	}
	else{
		//Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	795b      	ldrb	r3, [r3, #5]
 80003be:	2b04      	cmp	r3, #4
 80003c0:	d117      	bne.n	80003f2 <GPIO_Init+0x92>
		{
			//Configure the FTSR
			EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c2:	4b47      	ldr	r3, [pc, #284]	@ (80004e0 <GPIO_Init+0x180>)
 80003c4:	68db      	ldr	r3, [r3, #12]
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	7912      	ldrb	r2, [r2, #4]
 80003ca:	4611      	mov	r1, r2
 80003cc:	2201      	movs	r2, #1
 80003ce:	408a      	lsls	r2, r1
 80003d0:	4611      	mov	r1, r2
 80003d2:	4a43      	ldr	r2, [pc, #268]	@ (80004e0 <GPIO_Init+0x180>)
 80003d4:	430b      	orrs	r3, r1
 80003d6:	60d3      	str	r3, [r2, #12]
			//C;ear the corresponding RTSR bit
			EXTI->RTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003d8:	4b41      	ldr	r3, [pc, #260]	@ (80004e0 <GPIO_Init+0x180>)
 80003da:	689b      	ldr	r3, [r3, #8]
 80003dc:	687a      	ldr	r2, [r7, #4]
 80003de:	7912      	ldrb	r2, [r2, #4]
 80003e0:	4611      	mov	r1, r2
 80003e2:	2201      	movs	r2, #1
 80003e4:	408a      	lsls	r2, r1
 80003e6:	43d2      	mvns	r2, r2
 80003e8:	4611      	mov	r1, r2
 80003ea:	4a3d      	ldr	r2, [pc, #244]	@ (80004e0 <GPIO_Init+0x180>)
 80003ec:	400b      	ands	r3, r1
 80003ee:	6093      	str	r3, [r2, #8]
 80003f0:	e035      	b.n	800045e <GPIO_Init+0xfe>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	795b      	ldrb	r3, [r3, #5]
 80003f6:	2b05      	cmp	r3, #5
 80003f8:	d117      	bne.n	800042a <GPIO_Init+0xca>
		{
			//Configure the RTSR
			EXTI->FTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fa:	4b39      	ldr	r3, [pc, #228]	@ (80004e0 <GPIO_Init+0x180>)
 80003fc:	68db      	ldr	r3, [r3, #12]
 80003fe:	687a      	ldr	r2, [r7, #4]
 8000400:	7912      	ldrb	r2, [r2, #4]
 8000402:	4611      	mov	r1, r2
 8000404:	2201      	movs	r2, #1
 8000406:	408a      	lsls	r2, r1
 8000408:	43d2      	mvns	r2, r2
 800040a:	4611      	mov	r1, r2
 800040c:	4a34      	ldr	r2, [pc, #208]	@ (80004e0 <GPIO_Init+0x180>)
 800040e:	400b      	ands	r3, r1
 8000410:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000412:	4b33      	ldr	r3, [pc, #204]	@ (80004e0 <GPIO_Init+0x180>)
 8000414:	689b      	ldr	r3, [r3, #8]
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	7912      	ldrb	r2, [r2, #4]
 800041a:	4611      	mov	r1, r2
 800041c:	2201      	movs	r2, #1
 800041e:	408a      	lsls	r2, r1
 8000420:	4611      	mov	r1, r2
 8000422:	4a2f      	ldr	r2, [pc, #188]	@ (80004e0 <GPIO_Init+0x180>)
 8000424:	430b      	orrs	r3, r1
 8000426:	6093      	str	r3, [r2, #8]
 8000428:	e019      	b.n	800045e <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	795b      	ldrb	r3, [r3, #5]
 800042e:	2b06      	cmp	r3, #6
 8000430:	d115      	bne.n	800045e <GPIO_Init+0xfe>
		{
			//Configure both FTR and RTSR
			EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000432:	4b2b      	ldr	r3, [pc, #172]	@ (80004e0 <GPIO_Init+0x180>)
 8000434:	68db      	ldr	r3, [r3, #12]
 8000436:	687a      	ldr	r2, [r7, #4]
 8000438:	7912      	ldrb	r2, [r2, #4]
 800043a:	4611      	mov	r1, r2
 800043c:	2201      	movs	r2, #1
 800043e:	408a      	lsls	r2, r1
 8000440:	4611      	mov	r1, r2
 8000442:	4a27      	ldr	r2, [pc, #156]	@ (80004e0 <GPIO_Init+0x180>)
 8000444:	430b      	orrs	r3, r1
 8000446:	60d3      	str	r3, [r2, #12]
			//Set the corresponding RTSR bit
			EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000448:	4b25      	ldr	r3, [pc, #148]	@ (80004e0 <GPIO_Init+0x180>)
 800044a:	689b      	ldr	r3, [r3, #8]
 800044c:	687a      	ldr	r2, [r7, #4]
 800044e:	7912      	ldrb	r2, [r2, #4]
 8000450:	4611      	mov	r1, r2
 8000452:	2201      	movs	r2, #1
 8000454:	408a      	lsls	r2, r1
 8000456:	4611      	mov	r1, r2
 8000458:	4a21      	ldr	r2, [pc, #132]	@ (80004e0 <GPIO_Init+0x180>)
 800045a:	430b      	orrs	r3, r1
 800045c:	6093      	str	r3, [r2, #8]
		}
		//2. Configure the GPIO port selection in SYSFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /4;
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	791b      	ldrb	r3, [r3, #4]
 8000462:	089b      	lsrs	r3, r3, #2
 8000464:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4;
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	791b      	ldrb	r3, [r3, #4]
 800046a:	f003 0303 	and.w	r3, r3, #3
 800046e:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8000478:	d042      	beq.n	8000500 <GPIO_Init+0x1a0>
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	4a19      	ldr	r2, [pc, #100]	@ (80004e4 <GPIO_Init+0x184>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d02b      	beq.n	80004dc <GPIO_Init+0x17c>
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	4a17      	ldr	r2, [pc, #92]	@ (80004e8 <GPIO_Init+0x188>)
 800048a:	4293      	cmp	r3, r2
 800048c:	d024      	beq.n	80004d8 <GPIO_Init+0x178>
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	4a16      	ldr	r2, [pc, #88]	@ (80004ec <GPIO_Init+0x18c>)
 8000494:	4293      	cmp	r3, r2
 8000496:	d01d      	beq.n	80004d4 <GPIO_Init+0x174>
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	4a14      	ldr	r2, [pc, #80]	@ (80004f0 <GPIO_Init+0x190>)
 800049e:	4293      	cmp	r3, r2
 80004a0:	d016      	beq.n	80004d0 <GPIO_Init+0x170>
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	4a13      	ldr	r2, [pc, #76]	@ (80004f4 <GPIO_Init+0x194>)
 80004a8:	4293      	cmp	r3, r2
 80004aa:	d00f      	beq.n	80004cc <GPIO_Init+0x16c>
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	4a11      	ldr	r2, [pc, #68]	@ (80004f8 <GPIO_Init+0x198>)
 80004b2:	4293      	cmp	r3, r2
 80004b4:	d008      	beq.n	80004c8 <GPIO_Init+0x168>
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	4a10      	ldr	r2, [pc, #64]	@ (80004fc <GPIO_Init+0x19c>)
 80004bc:	4293      	cmp	r3, r2
 80004be:	d101      	bne.n	80004c4 <GPIO_Init+0x164>
 80004c0:	2307      	movs	r3, #7
 80004c2:	e01e      	b.n	8000502 <GPIO_Init+0x1a2>
 80004c4:	2300      	movs	r3, #0
 80004c6:	e01c      	b.n	8000502 <GPIO_Init+0x1a2>
 80004c8:	2306      	movs	r3, #6
 80004ca:	e01a      	b.n	8000502 <GPIO_Init+0x1a2>
 80004cc:	2305      	movs	r3, #5
 80004ce:	e018      	b.n	8000502 <GPIO_Init+0x1a2>
 80004d0:	2304      	movs	r3, #4
 80004d2:	e016      	b.n	8000502 <GPIO_Init+0x1a2>
 80004d4:	2303      	movs	r3, #3
 80004d6:	e014      	b.n	8000502 <GPIO_Init+0x1a2>
 80004d8:	2302      	movs	r3, #2
 80004da:	e012      	b.n	8000502 <GPIO_Init+0x1a2>
 80004dc:	2301      	movs	r3, #1
 80004de:	e010      	b.n	8000502 <GPIO_Init+0x1a2>
 80004e0:	40010400 	.word	0x40010400
 80004e4:	48000400 	.word	0x48000400
 80004e8:	48000800 	.word	0x48000800
 80004ec:	48000c00 	.word	0x48000c00
 80004f0:	48001000 	.word	0x48001000
 80004f4:	48001400 	.word	0x48001400
 80004f8:	48001800 	.word	0x48001800
 80004fc:	48001c00 	.word	0x48001c00
 8000500:	2300      	movs	r3, #0
 8000502:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000504:	4b5c      	ldr	r3, [pc, #368]	@ (8000678 <GPIO_Init+0x318>)
 8000506:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000508:	4a5b      	ldr	r2, [pc, #364]	@ (8000678 <GPIO_Init+0x318>)
 800050a:	f043 0301 	orr.w	r3, r3, #1
 800050e:	6613      	str	r3, [r2, #96]	@ 0x60
		SYSCFG->EXTICR[temp1]=portcode << (temp2*4);
 8000510:	7c7a      	ldrb	r2, [r7, #17]
 8000512:	7cbb      	ldrb	r3, [r7, #18]
 8000514:	009b      	lsls	r3, r3, #2
 8000516:	fa02 f103 	lsl.w	r1, r2, r3
 800051a:	4a58      	ldr	r2, [pc, #352]	@ (800067c <GPIO_Init+0x31c>)
 800051c:	7cfb      	ldrb	r3, [r7, #19]
 800051e:	3302      	adds	r3, #2
 8000520:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. Enable the exti interrupt delivery using IMR
		EXTI->IMR1 |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000524:	4b56      	ldr	r3, [pc, #344]	@ (8000680 <GPIO_Init+0x320>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	687a      	ldr	r2, [r7, #4]
 800052a:	7912      	ldrb	r2, [r2, #4]
 800052c:	4611      	mov	r1, r2
 800052e:	2201      	movs	r2, #1
 8000530:	408a      	lsls	r2, r1
 8000532:	4611      	mov	r1, r2
 8000534:	4a52      	ldr	r2, [pc, #328]	@ (8000680 <GPIO_Init+0x320>)
 8000536:	430b      	orrs	r3, r1
 8000538:	6013      	str	r3, [r2, #0]
	}

	temp=0;
 800053a:	2300      	movs	r3, #0
 800053c:	617b      	str	r3, [r7, #20]
	//2. Configure the speed
	temp= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<(2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	799b      	ldrb	r3, [r3, #6]
 8000542:	461a      	mov	r2, r3
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	791b      	ldrb	r3, [r3, #4]
 8000548:	005b      	lsls	r3, r3, #1
 800054a:	fa02 f303 	lsl.w	r3, r2, r3
 800054e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &=~(0x3 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);			//clearing
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	689a      	ldr	r2, [r3, #8]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	791b      	ldrb	r3, [r3, #4]
 800055a:	005b      	lsls	r3, r3, #1
 800055c:	2103      	movs	r1, #3
 800055e:	fa01 f303 	lsl.w	r3, r1, r3
 8000562:	43db      	mvns	r3, r3
 8000564:	4619      	mov	r1, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	400a      	ands	r2, r1
 800056c:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;														//setting
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	6899      	ldr	r1, [r3, #8]
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	697a      	ldr	r2, [r7, #20]
 800057a:	430a      	orrs	r2, r1
 800057c:	609a      	str	r2, [r3, #8]

	temp=0;
 800057e:	2300      	movs	r3, #0
 8000580:	617b      	str	r3, [r7, #20]
	//3. Configure the pupd settings
	temp= (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdContol <<(2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	79db      	ldrb	r3, [r3, #7]
 8000586:	461a      	mov	r2, r3
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	005b      	lsls	r3, r3, #1
 800058e:	fa02 f303 	lsl.w	r3, r2, r3
 8000592:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &=~(0x3 << 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);			//clearing
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	68da      	ldr	r2, [r3, #12]
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	791b      	ldrb	r3, [r3, #4]
 800059e:	005b      	lsls	r3, r3, #1
 80005a0:	2103      	movs	r1, #3
 80005a2:	fa01 f303 	lsl.w	r3, r1, r3
 80005a6:	43db      	mvns	r3, r3
 80005a8:	4619      	mov	r1, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	400a      	ands	r2, r1
 80005b0:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;															//setting
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	68d9      	ldr	r1, [r3, #12]
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	697a      	ldr	r2, [r7, #20]
 80005be:	430a      	orrs	r2, r1
 80005c0:	60da      	str	r2, [r3, #12]

	temp=0;
 80005c2:	2300      	movs	r3, #0
 80005c4:	617b      	str	r3, [r7, #20]
	//4. Configure the optype
	temp= (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	7a1b      	ldrb	r3, [r3, #8]
 80005ca:	461a      	mov	r2, r3
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	fa02 f303 	lsl.w	r3, r2, r3
 80005d4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &=~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);			//clearing
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	685a      	ldr	r2, [r3, #4]
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	791b      	ldrb	r3, [r3, #4]
 80005e0:	4619      	mov	r1, r3
 80005e2:	2301      	movs	r3, #1
 80005e4:	408b      	lsls	r3, r1
 80005e6:	43db      	mvns	r3, r3
 80005e8:	4619      	mov	r1, r3
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	400a      	ands	r2, r1
 80005f0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;														//setting
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	6859      	ldr	r1, [r3, #4]
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	697a      	ldr	r2, [r7, #20]
 80005fe:	430a      	orrs	r2, r1
 8000600:	605a      	str	r2, [r3, #4]

	//5. Configure the alt function
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	795b      	ldrb	r3, [r3, #5]
 8000606:	2b02      	cmp	r3, #2
 8000608:	d130      	bne.n	800066c <GPIO_Init+0x30c>
	{
		//CONFIGURE ONLY IF THE ALT FUNCTION REGISTERS.
		uint8_t temp1,temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	791b      	ldrb	r3, [r3, #4]
 800060e:	08db      	lsrs	r3, r3, #3
 8000610:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	791b      	ldrb	r3, [r3, #4]
 8000616:	f003 0307 	and.w	r3, r3, #7
 800061a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (0xF<< (4* temp2));													//clearing
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	7c3a      	ldrb	r2, [r7, #16]
 8000622:	3208      	adds	r2, #8
 8000624:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000628:	7bfb      	ldrb	r3, [r7, #15]
 800062a:	009b      	lsls	r3, r3, #2
 800062c:	220f      	movs	r2, #15
 800062e:	fa02 f303 	lsl.w	r3, r2, r3
 8000632:	4618      	mov	r0, r3
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	7c3a      	ldrb	r2, [r7, #16]
 800063a:	4301      	orrs	r1, r0
 800063c:	3208      	adds	r2, #8
 800063e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4* temp2));		//setting
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	7c3a      	ldrb	r2, [r7, #16]
 8000648:	3208      	adds	r2, #8
 800064a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	7a5b      	ldrb	r3, [r3, #9]
 8000652:	461a      	mov	r2, r3
 8000654:	7bfb      	ldrb	r3, [r7, #15]
 8000656:	009b      	lsls	r3, r3, #2
 8000658:	fa02 f303 	lsl.w	r3, r2, r3
 800065c:	4618      	mov	r0, r3
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	7c3a      	ldrb	r2, [r7, #16]
 8000664:	4301      	orrs	r1, r0
 8000666:	3208      	adds	r2, #8
 8000668:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 800066c:	bf00      	nop
 800066e:	371c      	adds	r7, #28
 8000670:	46bd      	mov	sp, r7
 8000672:	bc80      	pop	{r7}
 8000674:	4770      	bx	lr
 8000676:	bf00      	nop
 8000678:	40021000 	.word	0x40021000
 800067c:	40010000 	.word	0x40010000
 8000680:	40010400 	.word	0x40010400

08000684 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx,  uint16_t Value)
{
	pGPIOx->ODR= Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000684:	b480      	push	{r7}
 8000686:	b083      	sub	sp, #12
 8000688:	af00      	add	r7, sp, #0
 800068a:	6078      	str	r0, [r7, #4]
 800068c:	460b      	mov	r3, r1
 800068e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR^=(1<<PinNumber);
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	695b      	ldr	r3, [r3, #20]
 8000694:	78fa      	ldrb	r2, [r7, #3]
 8000696:	2101      	movs	r1, #1
 8000698:	fa01 f202 	lsl.w	r2, r1, r2
 800069c:	405a      	eors	r2, r3
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	615a      	str	r2, [r3, #20]
}
 80006a2:	bf00      	nop
 80006a4:	370c      	adds	r7, #12
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bc80      	pop	{r7}
 80006aa:	4770      	bx	lr

080006ac <GPIO_IRQInterruptConfig>:




void GPIO_IRQInterruptConfig(uint8_t IRQNumber,  uint8_t EnorDi)
{
 80006ac:	b480      	push	{r7}
 80006ae:	b083      	sub	sp, #12
 80006b0:	af00      	add	r7, sp, #0
 80006b2:	4603      	mov	r3, r0
 80006b4:	460a      	mov	r2, r1
 80006b6:	71fb      	strb	r3, [r7, #7]
 80006b8:	4613      	mov	r3, r2
 80006ba:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 80006bc:	79bb      	ldrb	r3, [r7, #6]
 80006be:	2b01      	cmp	r3, #1
 80006c0:	d133      	bne.n	800072a <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <=31)
 80006c2:	79fb      	ldrb	r3, [r7, #7]
 80006c4:	2b1f      	cmp	r3, #31
 80006c6:	d80a      	bhi.n	80006de <GPIO_IRQInterruptConfig+0x32>
		{
			// program ISER0 register
			*NVIC_ISER0 |= (1<< IRQNumber);
 80006c8:	4b34      	ldr	r3, [pc, #208]	@ (800079c <GPIO_IRQInterruptConfig+0xf0>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	79fa      	ldrb	r2, [r7, #7]
 80006ce:	2101      	movs	r1, #1
 80006d0:	fa01 f202 	lsl.w	r2, r1, r2
 80006d4:	4611      	mov	r1, r2
 80006d6:	4a31      	ldr	r2, [pc, #196]	@ (800079c <GPIO_IRQInterruptConfig+0xf0>)
 80006d8:	430b      	orrs	r3, r1
 80006da:	6013      	str	r3, [r2, #0]
			// program ICER2 register
			*NVIC_ICER2 |= (1<< IRQNumber%64);
		}

	}
}
 80006dc:	e059      	b.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >31 && IRQNumber<64 )
 80006de:	79fb      	ldrb	r3, [r7, #7]
 80006e0:	2b1f      	cmp	r3, #31
 80006e2:	d90f      	bls.n	8000704 <GPIO_IRQInterruptConfig+0x58>
 80006e4:	79fb      	ldrb	r3, [r7, #7]
 80006e6:	2b3f      	cmp	r3, #63	@ 0x3f
 80006e8:	d80c      	bhi.n	8000704 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1<< IRQNumber%32);
 80006ea:	4b2d      	ldr	r3, [pc, #180]	@ (80007a0 <GPIO_IRQInterruptConfig+0xf4>)
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	79fa      	ldrb	r2, [r7, #7]
 80006f0:	f002 021f 	and.w	r2, r2, #31
 80006f4:	2101      	movs	r1, #1
 80006f6:	fa01 f202 	lsl.w	r2, r1, r2
 80006fa:	4611      	mov	r1, r2
 80006fc:	4a28      	ldr	r2, [pc, #160]	@ (80007a0 <GPIO_IRQInterruptConfig+0xf4>)
 80006fe:	430b      	orrs	r3, r1
 8000700:	6013      	str	r3, [r2, #0]
 8000702:	e046      	b.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber>= 64 && IRQNumber<96)
 8000704:	79fb      	ldrb	r3, [r7, #7]
 8000706:	2b3f      	cmp	r3, #63	@ 0x3f
 8000708:	d943      	bls.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
 800070a:	79fb      	ldrb	r3, [r7, #7]
 800070c:	2b5f      	cmp	r3, #95	@ 0x5f
 800070e:	d840      	bhi.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1<< IRQNumber%64);
 8000710:	4b24      	ldr	r3, [pc, #144]	@ (80007a4 <GPIO_IRQInterruptConfig+0xf8>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	79fa      	ldrb	r2, [r7, #7]
 8000716:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800071a:	2101      	movs	r1, #1
 800071c:	fa01 f202 	lsl.w	r2, r1, r2
 8000720:	4611      	mov	r1, r2
 8000722:	4a20      	ldr	r2, [pc, #128]	@ (80007a4 <GPIO_IRQInterruptConfig+0xf8>)
 8000724:	430b      	orrs	r3, r1
 8000726:	6013      	str	r3, [r2, #0]
}
 8000728:	e033      	b.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <=31)
 800072a:	79fb      	ldrb	r3, [r7, #7]
 800072c:	2b1f      	cmp	r3, #31
 800072e:	d80a      	bhi.n	8000746 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1<< IRQNumber);
 8000730:	4b1d      	ldr	r3, [pc, #116]	@ (80007a8 <GPIO_IRQInterruptConfig+0xfc>)
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	79fa      	ldrb	r2, [r7, #7]
 8000736:	2101      	movs	r1, #1
 8000738:	fa01 f202 	lsl.w	r2, r1, r2
 800073c:	4611      	mov	r1, r2
 800073e:	4a1a      	ldr	r2, [pc, #104]	@ (80007a8 <GPIO_IRQInterruptConfig+0xfc>)
 8000740:	430b      	orrs	r3, r1
 8000742:	6013      	str	r3, [r2, #0]
}
 8000744:	e025      	b.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >31 && IRQNumber<64 )
 8000746:	79fb      	ldrb	r3, [r7, #7]
 8000748:	2b1f      	cmp	r3, #31
 800074a:	d90f      	bls.n	800076c <GPIO_IRQInterruptConfig+0xc0>
 800074c:	79fb      	ldrb	r3, [r7, #7]
 800074e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000750:	d80c      	bhi.n	800076c <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1<< IRQNumber%32);
 8000752:	4b16      	ldr	r3, [pc, #88]	@ (80007ac <GPIO_IRQInterruptConfig+0x100>)
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	79fa      	ldrb	r2, [r7, #7]
 8000758:	f002 021f 	and.w	r2, r2, #31
 800075c:	2101      	movs	r1, #1
 800075e:	fa01 f202 	lsl.w	r2, r1, r2
 8000762:	4611      	mov	r1, r2
 8000764:	4a11      	ldr	r2, [pc, #68]	@ (80007ac <GPIO_IRQInterruptConfig+0x100>)
 8000766:	430b      	orrs	r3, r1
 8000768:	6013      	str	r3, [r2, #0]
 800076a:	e012      	b.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber>= 64 && IRQNumber<96)
 800076c:	79fb      	ldrb	r3, [r7, #7]
 800076e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000770:	d90f      	bls.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
 8000772:	79fb      	ldrb	r3, [r7, #7]
 8000774:	2b5f      	cmp	r3, #95	@ 0x5f
 8000776:	d80c      	bhi.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1<< IRQNumber%64);
 8000778:	4b0d      	ldr	r3, [pc, #52]	@ (80007b0 <GPIO_IRQInterruptConfig+0x104>)
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	79fa      	ldrb	r2, [r7, #7]
 800077e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000782:	2101      	movs	r1, #1
 8000784:	fa01 f202 	lsl.w	r2, r1, r2
 8000788:	4611      	mov	r1, r2
 800078a:	4a09      	ldr	r2, [pc, #36]	@ (80007b0 <GPIO_IRQInterruptConfig+0x104>)
 800078c:	430b      	orrs	r3, r1
 800078e:	6013      	str	r3, [r2, #0]
}
 8000790:	e7ff      	b.n	8000792 <GPIO_IRQInterruptConfig+0xe6>
 8000792:	bf00      	nop
 8000794:	370c      	adds	r7, #12
 8000796:	46bd      	mov	sp, r7
 8000798:	bc80      	pop	{r7}
 800079a:	4770      	bx	lr
 800079c:	e000e100 	.word	0xe000e100
 80007a0:	e000e104 	.word	0xe000e104
 80007a4:	e000e108 	.word	0xe000e108
 80007a8:	e000e180 	.word	0xe000e180
 80007ac:	e000e184 	.word	0xe000e184
 80007b0:	e000e188 	.word	0xe000e188

080007b4 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 80007b4:	b480      	push	{r7}
 80007b6:	b085      	sub	sp, #20
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	4603      	mov	r3, r0
 80007bc:	6039      	str	r1, [r7, #0]
 80007be:	71fb      	strb	r3, [r7, #7]
	//1. First find the ipr register
	uint8_t iprx = IRQNumber/4;
 80007c0:	79fb      	ldrb	r3, [r7, #7]
 80007c2:	089b      	lsrs	r3, r3, #2
 80007c4:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber%4;
 80007c6:	79fb      	ldrb	r3, [r7, #7]
 80007c8:	f003 0303 	and.w	r3, r3, #3
 80007cc:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 80007ce:	7bbb      	ldrb	r3, [r7, #14]
 80007d0:	00db      	lsls	r3, r3, #3
 80007d2:	b2db      	uxtb	r3, r3
 80007d4:	3304      	adds	r3, #4
 80007d6:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx ) |= ( IRQPriority << shift_amount);
 80007d8:	7bfb      	ldrb	r3, [r7, #15]
 80007da:	009b      	lsls	r3, r3, #2
 80007dc:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 80007e0:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 80007e4:	6819      	ldr	r1, [r3, #0]
 80007e6:	7b7b      	ldrb	r3, [r7, #13]
 80007e8:	683a      	ldr	r2, [r7, #0]
 80007ea:	409a      	lsls	r2, r3
 80007ec:	7bfb      	ldrb	r3, [r7, #15]
 80007ee:	009b      	lsls	r3, r3, #2
 80007f0:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 80007f4:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 80007f8:	430a      	orrs	r2, r1
 80007fa:	601a      	str	r2, [r3, #0]
}
 80007fc:	bf00      	nop
 80007fe:	3714      	adds	r7, #20
 8000800:	46bd      	mov	sp, r7
 8000802:	bc80      	pop	{r7}
 8000804:	4770      	bx	lr
	...

08000808 <GPIO_IRQHandling>:



void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000808:	b480      	push	{r7}
 800080a:	b083      	sub	sp, #12
 800080c:	af00      	add	r7, sp, #0
 800080e:	4603      	mov	r3, r0
 8000810:	71fb      	strb	r3, [r7, #7]
	//Clear the exti pr register corresponding to the pin number
	if(EXTI->PR1 &(1<< PinNumber))
 8000812:	4b0c      	ldr	r3, [pc, #48]	@ (8000844 <GPIO_IRQHandling+0x3c>)
 8000814:	695b      	ldr	r3, [r3, #20]
 8000816:	79fa      	ldrb	r2, [r7, #7]
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	4013      	ands	r3, r2
 8000820:	2b00      	cmp	r3, #0
 8000822:	d009      	beq.n	8000838 <GPIO_IRQHandling+0x30>
	{
//		delay();
		EXTI->PR1 |= (1<< PinNumber);
 8000824:	4b07      	ldr	r3, [pc, #28]	@ (8000844 <GPIO_IRQHandling+0x3c>)
 8000826:	695b      	ldr	r3, [r3, #20]
 8000828:	79fa      	ldrb	r2, [r7, #7]
 800082a:	2101      	movs	r1, #1
 800082c:	fa01 f202 	lsl.w	r2, r1, r2
 8000830:	4611      	mov	r1, r2
 8000832:	4a04      	ldr	r2, [pc, #16]	@ (8000844 <GPIO_IRQHandling+0x3c>)
 8000834:	430b      	orrs	r3, r1
 8000836:	6153      	str	r3, [r2, #20]
	}
}
 8000838:	bf00      	nop
 800083a:	370c      	adds	r7, #12
 800083c:	46bd      	mov	sp, r7
 800083e:	bc80      	pop	{r7}
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop
 8000844:	40010400 	.word	0x40010400

08000848 <main>:

#define LOW         1
#define BTN_PRESSED LOW

int main(void)
{
 8000848:	b580      	push	{r7, lr}
 800084a:	b086      	sub	sp, #24
 800084c:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed, GpioBtn;

    memset(&GpioLed, 0, sizeof(GpioLed));
 800084e:	f107 030c 	add.w	r3, r7, #12
 8000852:	220c      	movs	r2, #12
 8000854:	2100      	movs	r1, #0
 8000856:	4618      	mov	r0, r3
 8000858:	f000 f873 	bl	8000942 <memset>
    memset(&GpioBtn, 0, sizeof(GpioBtn));
 800085c:	463b      	mov	r3, r7
 800085e:	220c      	movs	r2, #12
 8000860:	2100      	movs	r1, #0
 8000862:	4618      	mov	r0, r3
 8000864:	f000 f86d 	bl	8000942 <memset>

    // LED GPIO configuration
    GpioLed.pGPIOx = GPIOA;
 8000868:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800086c:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800086e:	2305      	movs	r3, #5
 8000870:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000872:	2301      	movs	r3, #1
 8000874:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000876:	2300      	movs	r3, #0
 8000878:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800087a:	2300      	movs	r3, #0
 800087c:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdContol = GPIO_NO_PUPD;
 800087e:	2300      	movs	r3, #0
 8000880:	74fb      	strb	r3, [r7, #19]

    GPIO_PeriClockControl(GPIOA, ENABLE);
 8000882:	2101      	movs	r1, #1
 8000884:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000888:	f7ff fc9c 	bl	80001c4 <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 800088c:	f107 030c 	add.w	r3, r7, #12
 8000890:	4618      	mov	r0, r3
 8000892:	f7ff fd65 	bl	8000360 <GPIO_Init>

    // Button GPIO configuration
    GpioBtn.pGPIOx = GPIOC;
 8000896:	4b0f      	ldr	r3, [pc, #60]	@ (80008d4 <main+0x8c>)
 8000898:	603b      	str	r3, [r7, #0]
    GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800089a:	230d      	movs	r3, #13
 800089c:	713b      	strb	r3, [r7, #4]
    GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;  // Interrupt mode, falling edge
 800089e:	2304      	movs	r3, #4
 80008a0:	717b      	strb	r3, [r7, #5]
    GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80008a2:	2303      	movs	r3, #3
 80008a4:	71bb      	strb	r3, [r7, #6]
    GpioBtn.GPIO_PinConfig.GPIO_PinPuPdContol = GPIO_PIN_PU;
 80008a6:	2301      	movs	r3, #1
 80008a8:	71fb      	strb	r3, [r7, #7]

    GPIO_PeriClockControl(GPIOC, ENABLE);
 80008aa:	2101      	movs	r1, #1
 80008ac:	4809      	ldr	r0, [pc, #36]	@ (80008d4 <main+0x8c>)
 80008ae:	f7ff fc89 	bl	80001c4 <GPIO_PeriClockControl>
    GPIO_Init(&GpioBtn);
 80008b2:	463b      	mov	r3, r7
 80008b4:	4618      	mov	r0, r3
 80008b6:	f7ff fd53 	bl	8000360 <GPIO_Init>

    // IRQ configuration
    GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRI15);
 80008ba:	210f      	movs	r1, #15
 80008bc:	2028      	movs	r0, #40	@ 0x28
 80008be:	f7ff ff79 	bl	80007b4 <GPIO_IRQPriorityConfig>
    GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 80008c2:	2101      	movs	r1, #1
 80008c4:	2028      	movs	r0, #40	@ 0x28
 80008c6:	f7ff fef1 	bl	80006ac <GPIO_IRQInterruptConfig>
//    	delay();
//        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);  // Toggle the LED
//
//    }

    return 0;
 80008ca:	2300      	movs	r3, #0
}
 80008cc:	4618      	mov	r0, r3
 80008ce:	3718      	adds	r7, #24
 80008d0:	46bd      	mov	sp, r7
 80008d2:	bd80      	pop	{r7, pc}
 80008d4:	48000800 	.word	0x48000800

080008d8 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 80008d8:	b580      	push	{r7, lr}
 80008da:	af00      	add	r7, sp, #0
    GPIO_IRQHandling(GPIO_PIN_NO_13);  // Clear the interrupt flag
 80008dc:	200d      	movs	r0, #13
 80008de:	f7ff ff93 	bl	8000808 <GPIO_IRQHandling>
    GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);  // Toggle the LED
 80008e2:	2105      	movs	r1, #5
 80008e4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80008e8:	f7ff fecc 	bl	8000684 <GPIO_ToggleOutputPin>
}
 80008ec:	bf00      	nop
 80008ee:	bd80      	pop	{r7, pc}

080008f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008f0:	480d      	ldr	r0, [pc, #52]	@ (8000928 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008f8:	480c      	ldr	r0, [pc, #48]	@ (800092c <LoopForever+0x6>)
  ldr r1, =_edata
 80008fa:	490d      	ldr	r1, [pc, #52]	@ (8000930 <LoopForever+0xa>)
  ldr r2, =_sidata
 80008fc:	4a0d      	ldr	r2, [pc, #52]	@ (8000934 <LoopForever+0xe>)
  movs r3, #0
 80008fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000900:	e002      	b.n	8000908 <LoopCopyDataInit>

08000902 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000902:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000904:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000906:	3304      	adds	r3, #4

08000908 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000908:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800090a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800090c:	d3f9      	bcc.n	8000902 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800090e:	4a0a      	ldr	r2, [pc, #40]	@ (8000938 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000910:	4c0a      	ldr	r4, [pc, #40]	@ (800093c <LoopForever+0x16>)
  movs r3, #0
 8000912:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000914:	e001      	b.n	800091a <LoopFillZerobss>

08000916 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000916:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000918:	3204      	adds	r2, #4

0800091a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800091a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800091c:	d3fb      	bcc.n	8000916 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800091e:	f000 f819 	bl	8000954 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000922:	f7ff ff91 	bl	8000848 <main>

08000926 <LoopForever>:

LoopForever:
  b LoopForever
 8000926:	e7fe      	b.n	8000926 <LoopForever>
  ldr   r0, =_estack
 8000928:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800092c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000930:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000934:	080009bc 	.word	0x080009bc
  ldr r2, =_sbss
 8000938:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800093c:	2000001c 	.word	0x2000001c

08000940 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000940:	e7fe      	b.n	8000940 <ADC1_2_IRQHandler>

08000942 <memset>:
 8000942:	4402      	add	r2, r0
 8000944:	4603      	mov	r3, r0
 8000946:	4293      	cmp	r3, r2
 8000948:	d100      	bne.n	800094c <memset+0xa>
 800094a:	4770      	bx	lr
 800094c:	f803 1b01 	strb.w	r1, [r3], #1
 8000950:	e7f9      	b.n	8000946 <memset+0x4>
	...

08000954 <__libc_init_array>:
 8000954:	b570      	push	{r4, r5, r6, lr}
 8000956:	4d0d      	ldr	r5, [pc, #52]	@ (800098c <__libc_init_array+0x38>)
 8000958:	4c0d      	ldr	r4, [pc, #52]	@ (8000990 <__libc_init_array+0x3c>)
 800095a:	1b64      	subs	r4, r4, r5
 800095c:	10a4      	asrs	r4, r4, #2
 800095e:	2600      	movs	r6, #0
 8000960:	42a6      	cmp	r6, r4
 8000962:	d109      	bne.n	8000978 <__libc_init_array+0x24>
 8000964:	4d0b      	ldr	r5, [pc, #44]	@ (8000994 <__libc_init_array+0x40>)
 8000966:	4c0c      	ldr	r4, [pc, #48]	@ (8000998 <__libc_init_array+0x44>)
 8000968:	f000 f818 	bl	800099c <_init>
 800096c:	1b64      	subs	r4, r4, r5
 800096e:	10a4      	asrs	r4, r4, #2
 8000970:	2600      	movs	r6, #0
 8000972:	42a6      	cmp	r6, r4
 8000974:	d105      	bne.n	8000982 <__libc_init_array+0x2e>
 8000976:	bd70      	pop	{r4, r5, r6, pc}
 8000978:	f855 3b04 	ldr.w	r3, [r5], #4
 800097c:	4798      	blx	r3
 800097e:	3601      	adds	r6, #1
 8000980:	e7ee      	b.n	8000960 <__libc_init_array+0xc>
 8000982:	f855 3b04 	ldr.w	r3, [r5], #4
 8000986:	4798      	blx	r3
 8000988:	3601      	adds	r6, #1
 800098a:	e7f2      	b.n	8000972 <__libc_init_array+0x1e>
 800098c:	080009b4 	.word	0x080009b4
 8000990:	080009b4 	.word	0x080009b4
 8000994:	080009b4 	.word	0x080009b4
 8000998:	080009b8 	.word	0x080009b8

0800099c <_init>:
 800099c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800099e:	bf00      	nop
 80009a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009a2:	bc08      	pop	{r3}
 80009a4:	469e      	mov	lr, r3
 80009a6:	4770      	bx	lr

080009a8 <_fini>:
 80009a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009aa:	bf00      	nop
 80009ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009ae:	bc08      	pop	{r3}
 80009b0:	469e      	mov	lr, r3
 80009b2:	4770      	bx	lr
